#!/usr/bin/env python3
"""
summarizer_input.py
---------------------------------
A simple live code summarizer.
User enters/pastes code, then gets a short summary.
"""

import re

def summarize_code(code: str) -> str:
    """Generate a very basic summary of the given code."""
    summary_lines = []

    # Detect package info (PKGBUILD style)
    pkgname = re.search(r'pkgname\s*=\s*([^\n]+)', code)
    pkgver = re.search(r'pkgver\s*=\s*([^\n]+)', code)
    if pkgname:
        summary_lines.append(f"Package Name: {pkgname.group(1).strip()}")
    if pkgver:
        summary_lines.append(f"Version: {pkgver.group(1).strip()}")

    # Detect dependencies (quoted tokens)
    deps = re.findall(r"['\"]([A-Za-z0-9\-\._]+)['\"]", code)
    if deps:
        summary_lines.append(f"Dependencies: {', '.join(sorted(set(deps)))}")

    # Detect shell-style functions: name() { ... }
    funcs = re.findall(r'^\s*([A-Za-z0-9_]+)\s*\(\)\s*\{', code, re.M)
    if funcs:
        summary_lines.append(f"Functions: {', '.join(funcs)}")

    if not summary_lines:
        summary_lines.append("No special metadata found. Looks like plain code.")

    return "\n".join(summary_lines)


if __name__ == "__main__":
    print("=== Live Code Summarizer ===")
    print("Paste your code below.")
    print("(Finish input with Ctrl+D on Mac/Linux or Ctrl+Z then Enter on Windows)\n")

    # Collect multiline input
    user_code_lines = []
    try:
        while True:
            line = input()
            user_code_lines.append(line)
    except EOFError:
        pass

    code_text = "\n".join(user_code_lines).strip()
    print("\n--- SUMMARY ---")
    if code_text:
        print(summarize_code(code_text))
    else:
        print("No code entered.")
